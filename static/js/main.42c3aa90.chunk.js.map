{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","isHighlighted","square","onClick","value","Board","i","_this","this","winner","key","toString","squares","winningPositions","includes","count","board","row","j","push","renderSquare","createBoard","React","Component","Game","_this2","Object","_home_sola_Code_tic_tac_toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_sola_Code_tic_tac_toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_sola_Code_tic_tac_toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","position","getPosition","step","status","_this3","current","moves","map","move","desc","btnClass","jumpTo","console","log","handleClick","document","getElementById","classList","toggle","id","lines","_lines$i","_home_sola_Code_tic_tac_toe_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render"],"mappings":"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","file":"static/js/main.42c3aa90.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  const square = \"square\";\n  const highlight = \"highlight\";\n\n  return (\n    <button className={props.isHighlighted ? square + \" \" + highlight : square}\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    const winner = this.props.winner;\n    return (\n      <Square\n        key={\"square\" + i.toString()}\n        value={this.props.squares[i]}\n        isHighlighted={winner && winner.winningPositions.includes(i)}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  createBoard() {\n    let count = 0;\n    let board = [];\n\n    for (let i = 0; i < 3; i++) {\n      let row = [];\n      for (let j = 0; j < 3; j++) {\n        row.push(this.renderSquare(count));\n        count++;\n      }\n      board.push(\n        <div className=\"board-row\" key={\"row\" + i.toString()}>{row}</div>\n      )\n    }\n\n    return board;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.createBoard()}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          position: getPosition(i),\n        }\n      ]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map( (step, move) => {\n      const desc = move ?\n        'Go to move #' + move + \" at position \" + step.position :\n        'Go to game start';\n      const btnClass = move === this.state.stepNumber ?\n        'moves-btn bold' : 'moves-btn';\n\n      return (\n        <li key={move}>\n          <button className={btnClass} onClick={() => this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      )\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner.winner;\n    } else if (this.state.stepNumber === current.squares.length) {\n      console.log(this.state.stepNumber);\n      status = 'Draw';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game display\">\n        <div className=\"game-board margin-bottom\">\n          <Board\n            squares={current.squares}\n            winner={winner}\n            onClick={ (i) => this.handleClick(i) }\n          />\n          <br />\n          <button onClick={() => sortList()}>Sort moves</button>\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol id=\"moves-list\">{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b ,c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        winningPositions: lines[i]\n      }\n    }\n  }\n  return null;\n}\n\nfunction getPosition(i) {\n  const positions = [\"(1, 1)\", \"(1, 2)\", \"(1, 3)\",\n                     \"(2, 1)\", \"(2, 2)\", \"(2, 3)\",\n                     \"(3, 1)\", \"(3, 2)\", \"(3, 3)\"];\n  return positions[i];\n}\n\nfunction sortList() {\n  const list = document.getElementById('moves-list');\n  list.classList.toggle('reverse-list');\n}\n"],"sourceRoot":""}